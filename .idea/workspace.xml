<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d4d174d7-70ce-44d1-9639-135450e55bca" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api-gateway/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api-gateway/src/main/java/com/programming/techie/apigateway/config/SecurityConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/discovery-server/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/discovery-server/src/main/java/com/programming/techie/discoveryserver/config/SecurityConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker/db-docker/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker/kafka-docker/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker/prometheus-docker/config/prometheus-web.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker/prometheus-docker/config/prometheus.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker/prometheus-docker/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/InventoryServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/controllers/InventoryController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/dtos/InventoryResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/models/Inventory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/repos/InventoryRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/java/com/microservicestutorial/inventoryservice/services/InventoryService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/main/resources/db/migration/V1__create_tables.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/inventory-service/src/test/java/com/microservicestutorial/inventoryservice/InventoryServiceApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notif-service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notif-service/src/main/java/com/microservicestutorial/notifservice/NotifServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notif-service/src/main/java/com/microservicestutorial/notifservice/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notif-service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/DTOs/InventoryResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/DTOs/OrderLineItemDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/DTOs/OrderRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/OrderServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/config/WebClientConfig.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/controllers/OrderController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/events/OrderPlacedEvent.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/models/Order.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/models/OrderLineItem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/repos/OrderRepo.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/java/com/microservicestutorial/orderservice/services/OrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/main/resources/db/migration/V1__create_tables.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/order-service/src/test/java/com/microservicestutorial/orderservice/OrderServiceApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/DTOs/ProductRequestDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/DTOs/ProductResponseDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/ProductServiceApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/controllers/ProductController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/models/Product.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/repos/ProductRepo.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/java/com/microservicestutorial/productservice/services/ProductService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/main/resources/db/migration/V1__create_tables.sql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/product-service/src/test/java/com/microservicestutorial/productservice/ProductServiceApplicationTests.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2F1X8Jin5sPIK0qF9D8cTbmwino" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "jdk.selected.JAVA_MODULE": "17",
    "last_opened_file_path": "/home/zvonimir/Intis/microservices-tutorials/spring-boot-microservices-new",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "reference.settings.project.maven.repository.indices",
    "spring.configuration.checksum": "675069d500a9d0820f7a0220aa6882f6"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/product-service" />
      <recent name="$PROJECT_DIR$/order-service" />
      <recent name="$PROJECT_DIR$/inventory-service" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docker/prometheus-docker/config" />
      <recent name="$PROJECT_DIR$/etc/prometheus" />
      <recent name="$PROJECT_DIR$/etc" />
      <recent name="$PROJECT_DIR$/prometheus/prometheus-config" />
      <recent name="$PROJECT_DIR$/kafka-docker" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean" />
      <command value="mvn clean verify" />
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.ApiGatewayApplication">
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.programming.techie.apigateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="discovery-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.programming.techie.discoveryserver.DiscoveryServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" singleton="false">
      <option name="ACTIVE_PROFILES" />
      <module name="inventory-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.microservicestutorial.inventoryservice.InventoryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotifServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="notif-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.microservicestutorial.notifservice.NotifServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservicestutorial.notifservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.microservicestutorial.notificationservice.NotificationServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.microservicestutorial.notificationservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.programming.techie.NotificationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.microservicestutorial.orderservice.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.microservicestutorial.productservice.ProductServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="prometheus.grafana: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="grafana" />
            </list>
          </option>
          <option name="sourceFilePath" value="etc/prometheus/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.NotifServiceApplication" />
        <item itemvalue="Docker.prometheus.grafana: Compose Deployment" />
        <item itemvalue="Spring Boot.NotificationServiceApplication (1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d4d174d7-70ce-44d1-9639-135450e55bca" name="Changes" comment="" />
      <created>1663660404856</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663660404856</updated>
      <workItem from="1663660406343" duration="15246000" />
      <workItem from="1663742614257" duration="16846000" />
      <workItem from="1663833358363" duration="5185000" />
      <workItem from="1664183273560" duration="567000" />
      <workItem from="1664184360432" duration="10101000" />
      <workItem from="1664263238038" duration="12334000" />
      <workItem from="1664351639846" duration="1752000" />
      <workItem from="1664354616816" duration="4536000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>